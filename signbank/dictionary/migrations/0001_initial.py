# Generated by Django 2.2.11 on 2020-10-16 13:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tagging', '0003_adapt_max_tag_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, verbose_name='Name')),
                ('public_name', models.CharField(max_length=60, verbose_name='Public name')),
                ('public_name_fi', models.CharField(max_length=60, null=True, verbose_name='Public name')),
                ('public_name_en', models.CharField(max_length=60, null=True, verbose_name='Public name')),
                ('is_public', models.BooleanField(default=False, help_text='Is this dataset is public or private?', verbose_name='Is public')),
                ('description', models.TextField(verbose_name='Description')),
                ('description_fi', models.TextField(null=True, verbose_name='Description')),
                ('description_en', models.TextField(null=True, verbose_name='Description')),
                ('copyright', models.TextField(verbose_name='Copyright')),
                ('copyright_fi', models.TextField(null=True, verbose_name='Copyright')),
                ('copyright_en', models.TextField(null=True, verbose_name='Copyright')),
                ('admins', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Admins')),
            ],
            options={
                'verbose_name': 'Lexicon',
                'verbose_name_plural': 'Lexicons',
                'ordering': ['id'],
                'permissions': (('access_dataset', 'Access dataset'),),
            },
        ),
        migrations.CreateModel(
            name='Dialect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Dialect',
                'verbose_name_plural': 'Dialects',
                'ordering': ['language', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FieldChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=50)),
                ('english_name', models.CharField(max_length=50)),
                ('machine_value', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name': 'Field choice',
                'verbose_name_plural': 'Field choices',
                'ordering': ['field', 'machine_value'],
            },
        ),
        migrations.CreateModel(
            name='Gloss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published', models.BooleanField(default=False, help_text='Publish this gloss in the public gloss list', verbose_name='Published')),
                ('exclude_from_ecv', models.BooleanField(default=False, help_text='Exclude from ELAN externally controlled vocabularies (ECV)', verbose_name='Exclude from ECV')),
                ('idgloss', models.CharField(help_text='This is the unique identifying name of a Gloss.', max_length=60, verbose_name='Gloss')),
                ('idgloss_en', models.CharField(blank=True, help_text='This is the English name for the Gloss', max_length=60, verbose_name='Gloss in English')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('repeated_movement', models.NullBooleanField(default=False, verbose_name='Repeated Movement')),
                ('alternating_movement', models.NullBooleanField(default=False, verbose_name='Alternating Movement')),
                ('phonology_other', models.TextField(blank=True, null=True, verbose_name='Phonology Other')),
                ('mouth_gesture', models.CharField(blank=True, max_length=50, verbose_name='Mouth Gesture')),
                ('mouthing', models.CharField(blank=True, max_length=50, verbose_name='Mouthing')),
                ('phonetic_variation', models.CharField(blank=True, max_length=50, verbose_name='Phonetic Variation')),
                ('iconic_image', models.CharField(blank=True, max_length=50, verbose_name='Iconic Image')),
                ('number_of_occurences', models.IntegerField(blank=True, help_text='Number of occurences in annotation materials', null=True, verbose_name='Number of Occurrences')),
                ('absolute_orientation_fingers', models.ForeignKey(blank=True, db_column='absolute_orientation_fingers', limit_choices_to={'field': 'absolute_orientation_fingers'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='absolute_orientation_fingers', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Absolute Orientation: Fingers')),
                ('absolute_orientation_palm', models.ForeignKey(blank=True, db_column='absolute_orientation_palm', limit_choices_to={'field': 'absolute_orientation_palm'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='absolute_orientation_palm', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Absolute Orientation: Palm')),
                ('contact_type', models.ForeignKey(blank=True, db_column='contact_type', limit_choices_to={'field': 'contact_type'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_type', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Contact Type')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_by_user', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(help_text='Dataset a gloss is part of', on_delete=django.db.models.deletion.PROTECT, to='dictionary.Dataset', verbose_name='Glosses dataset')),
                ('dialect', models.ManyToManyField(blank=True, to='dictionary.Dialect')),
                ('handedness', models.ForeignKey(blank=True, db_column='handedness', limit_choices_to={'field': 'handedness'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handedness', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Handedness')),
                ('handshape_change', models.ForeignKey(blank=True, db_column='handshape_change', limit_choices_to={'field': 'handshape_change'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handshape_change', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Handshape Change')),
                ('location', models.ForeignKey(blank=True, db_column='location', limit_choices_to={'field': 'location'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Location')),
                ('movement_direction', models.ForeignKey(blank=True, db_column='movement_direction', limit_choices_to={'field': 'movement_direction'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movement_direction', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Movement Direction')),
                ('movement_manner', models.ForeignKey(blank=True, db_column='movement_manner', limit_choices_to={'field': 'movement_manner'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movement_manner', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Movement Manner')),
                ('movement_shape', models.ForeignKey(blank=True, db_column='movement_shape', limit_choices_to={'field': 'movement_shape'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movement_shape', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Movement Shape')),
                ('named_entity', models.ForeignKey(blank=True, db_column='named_entity', limit_choices_to={'field': 'named_entity'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='named_entity', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Named Entity')),
                ('orientation_change', models.ForeignKey(blank=True, db_column='orientation_change', limit_choices_to={'field': 'orientation_change'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orientation_change', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Orientation Change')),
                ('relation_between_articulators', models.ForeignKey(blank=True, db_column='relation_between_articulators', limit_choices_to={'field': 'relation_between_articulators'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relation_between_articulators', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Relation Between Articulators')),
                ('relative_orientation_location', models.ForeignKey(blank=True, db_column='relative_orientation_location', limit_choices_to={'field': 'relative_orientation_location'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relative_orientation_location', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Relative Orientation: Location')),
                ('relative_orientation_movement', models.ForeignKey(blank=True, db_column='relative_orientation_movement', limit_choices_to={'field': 'relative_orientation_movement'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relative_orientation_movement', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Relative Orientation: Movement')),
                ('semantic_field', models.ForeignKey(blank=True, db_column='semantic_field', limit_choices_to={'field': 'semantic_field'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='semantic_field', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Semantic Field')),
                ('strong_handshape', models.ForeignKey(blank=True, db_column='strong_handshape', limit_choices_to={'field': 'strong_handshape'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='strong_handshape', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Strong Hand')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_by_user', to=settings.AUTH_USER_MODEL)),
                ('weak_handshape', models.ForeignKey(blank=True, db_column='weak_handshape', limit_choices_to={'field': 'weak_handshape'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='weak_handshape', to='dictionary.FieldChoice', to_field='machine_value', verbose_name='Weak Hand')),
            ],
            options={
                'verbose_name': 'Gloss',
                'verbose_name_plural': 'Glosses',
                'ordering': ['idgloss'],
                'permissions': (('update_video', 'Can Update Video'), ('search_gloss', 'Can Search/View Full Gloss Details'), ('export_csv', 'Can export sign details as CSV'), ('import_csv', 'Can import glosses from a CSV file'), ('view_advanced_properties', 'Include all properties in sign detail view'), ('publish_gloss', 'Can publish and unpublish Glosses')),
                'unique_together': {('idgloss', 'dataset')},
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Keyword',
                'verbose_name_plural': 'Keywords',
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('name_fi', models.CharField(max_length=50, null=True)),
                ('name_en', models.CharField(max_length=50, null=True)),
                ('language_code_2char', models.CharField(help_text='ISO 639-1 language code (2 characters long) of a written language.', max_length=2)),
                ('language_code_3char', models.CharField(help_text='ISO 639-3 language code (3 characters long) of a written language.', max_length=3)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Written language',
                'verbose_name_plural': 'Written languages',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='SignLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('name_fi', models.CharField(max_length=50, null=True)),
                ('name_en', models.CharField(max_length=50, null=True)),
                ('language_code_3char', models.CharField(help_text='ISO 639-3 language code (3 characters long) of a sign language.', max_length=3)),
            ],
            options={
                'verbose_name': 'Sign language',
                'verbose_name_plural': 'Sign languages',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RelationToForeignSign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan', models.BooleanField(default=False, verbose_name='Loan Sign')),
                ('other_lang', models.CharField(max_length=20, verbose_name='Related Language')),
                ('other_lang_gloss', models.CharField(max_length=50, verbose_name='Gloss in related language')),
                ('gloss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Gloss')),
            ],
            options={
                'verbose_name': 'Relation to Foreign Sign',
                'verbose_name_plural': 'Relations to Foreign Signs',
                'ordering': ['gloss', 'loan', 'other_lang', 'other_lang_gloss'],
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(blank=True, db_column='MorphologyType', limit_choices_to={'field': 'MorphologyType'}, on_delete=django.db.models.deletion.CASCADE, to='dictionary.FieldChoice', to_field='machine_value')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relation_sources', to='dictionary.Gloss')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relation_targets', to='dictionary.Gloss')),
            ],
            options={
                'verbose_name': 'Relation',
                'verbose_name_plural': 'Relations',
                'ordering': ['source'],
            },
        ),
        migrations.CreateModel(
            name='MorphologyDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('morpheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='morphemes', to='dictionary.Gloss')),
                ('parent_gloss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_glosses', to='dictionary.Gloss')),
                ('role', models.ForeignKey(blank=True, db_column='MorphologyType', limit_choices_to={'field': 'MorphologyType'}, on_delete=django.db.models.deletion.CASCADE, to='dictionary.FieldChoice', to_field='machine_value')),
            ],
            options={
                'verbose_name': 'Morphology definition',
                'verbose_name_plural': 'Morphology definitions',
            },
        ),
        migrations.CreateModel(
            name='GlossURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('gloss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Gloss', verbose_name='Gloss')),
            ],
            options={
                'verbose_name': 'Gloss URL',
                'verbose_name_plural': 'Gloss URLs',
            },
        ),
        migrations.CreateModel(
            name='GlossRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glossrelation_source', to='dictionary.Gloss')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glossrelation_target', to='dictionary.Gloss')),
            ],
            options={
                'verbose_name': 'Gloss relation',
                'verbose_name_plural': 'Gloss relations',
                'ordering': ['source'],
            },
        ),
        migrations.AddField(
            model_name='dialect',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.SignLanguage', verbose_name='Sign language'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='signlanguage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dictionary.SignLanguage', verbose_name='Sign language'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='translation_languages',
            field=models.ManyToManyField(help_text='These languages are options for translation equivalents.', to='dictionary.Language', verbose_name='Translation equivalent languages'),
        ),
        migrations.CreateModel(
            name='AllowedTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowed_tags', models.ManyToManyField(to='tagging.Tag', verbose_name='Allowed tags')),
                ('content_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'Allowed tags',
                'verbose_name_plural': 'Allowed tags',
            },
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='Order')),
                ('gloss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Gloss', verbose_name='Gloss')),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dictionary.Keyword', verbose_name='Keyword')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Language', verbose_name='Language')),
            ],
            options={
                'verbose_name': 'Translation equivalent',
                'verbose_name_plural': 'Translation equivalents',
                'ordering': ['gloss', 'language', 'order'],
                'unique_together': {('gloss', 'language', 'keyword')},
            },
        ),
        migrations.CreateModel(
            name='GlossTranslations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translations', models.TextField(blank=True)),
                ('gloss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Gloss', verbose_name='Gloss')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.Language', verbose_name='Language')),
            ],
            options={
                'verbose_name': 'Gloss translation field',
                'verbose_name_plural': 'Gloss translation fields',
                'ordering': ['language'],
                'unique_together': {('gloss', 'language')},
            },
        ),
    ]
